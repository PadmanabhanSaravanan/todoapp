name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed

jobs:
  create-cluster:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '403.0.0'

      - name: Authenticate to GCP
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: echo "${GCP_SA_KEY}" | gcloud auth activate-service-account --key-file=-

      - name: Set GCP Project
        run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Check if Terraform is installed
        id: check_terraform
        run: |
          if ! command -v terraform &> /dev/null; then
            echo "Terraform is not installed. Installing Terraform..."
            sudo apt-get update && sudo apt-get install -y wget unzip
            wget https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
            unzip terraform_1.5.0_linux_amd64.zip
            sudo mv terraform /usr/local/bin/
            terraform -v
          else
            echo "Terraform is already installed."
            terraform -v
          
      - name: Initialize Terraform
        run: |
          cd terraform
          terraform init

      - name: Apply Terraform to Create Cluster
        run: |
          terraform apply -auto-approve

  deploy-application:
    runs-on: ubuntu-latest
    needs: create-cluster

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Kubernetes Cluster
        run: |
          kubectl apply -f deployment.yaml

  run-postman-tests:
    runs-on: ubuntu-latest
    needs: deploy-application

    steps:
      - name: Install newman
        run: npm install -g newman

      - name: Run Postman Collection
        run: newman run postman_collection.json  # Ensure your Postman collection is in the repository

  destroy-application:
    runs-on: ubuntu-latest
    needs: run-postman-tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Destroy Application
        run: |
          kubectl delete -f deployment.yaml

  destroy-cluster:
    runs-on: ubuntu-latest
    needs: destroy-application

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Destroy GCP Cluster
        run: |
          terraform destroy -auto-approve
